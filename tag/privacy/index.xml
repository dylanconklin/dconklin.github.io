<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Privacy | DIPr Lab at PSU</title>
    <link>/tag/privacy/</link>
      <atom:link href="/tag/privacy/index.xml" rel="self" type="application/rss+xml" />
    <description>Privacy</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Sat, 15 Jun 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hu11534601174274055989.png</url>
      <title>Privacy</title>
      <link>/tag/privacy/</link>
    </image>
    
    <item>
      <title>Securing IoT Communication Protocols at Scale</title>
      <link>/project/pubsubcontrol/</link>
      <pubDate>Sat, 15 Jun 2024 00:00:00 +0000</pubDate>
      <guid>/project/pubsubcontrol/</guid>
      <description>&lt;p&gt;The world of the connected “Internet of Things” is expanding to include more devices which observe our daily lives, routines, locations, and even our state of health. But have the underlying protocols by which they communicate this data kept pace with the need to protect our privacy and security?&lt;/p&gt;
&lt;p&gt;In this project, we will investigate various “middleware” approaches to injecting dynamic access control agents into existing MQTT broker servers and measure their performance on real and/or simulated network environments as well as their resilience to security threats.&lt;/p&gt;
&lt;p&gt;We seek to strengthen the protocols underlying the communication between IoT devices, such as MQTT, to adjudicate who is authorized to access which information, where the access parameters may rapidly and frequently change, without impacting performance, based on the implications of the MQTT message topic hierarchical structure combined with geospacial security policy “zones” and techniques to simplfy and consolidate policy rules in real time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accord</title>
      <link>/project/accord/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>/project/accord/</guid>
      <description>&lt;p&gt;Users are increasingly adopting collaborative cloud services like Google Drive.
The lack of fine-grained access controls on many cloud services make actions that violate the expectations of other users likely, resulting in multiuser conflicts.
For example, a user with editor permissions may add a user outside the organization and revoke the permissions of another user, all without consent from the original resource owner.
These multiuser conflicts may compromise a resource&amp;rsquo;s confidentiality, integrity, or availability, leading to a lack of trust in cloud services.&lt;/p&gt;
&lt;p&gt;ACCORD is a web application built on top of Google Drive which prevents and detects multiuser conflicts.
It employs a simulator to help users preemptively identify potential conflicts and
assist them in defining action constraints.
Then, using these action constraints, ACCORD can automatically detect future conflicts and suggest resolutions.&lt;/p&gt;
&lt;p&gt;Currently, we are testing the scalability and practicality of ACCORD with larger numbers of users and resources.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Blue Crab</title>
      <link>/project/bluecrab/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>/project/bluecrab/</guid>
      <description>&lt;p&gt;Blue Crab is a mobile app based on Flutter, which combines GPS with Bluetooth scanning to detect unwanted trackers. Its purpose is to experiment with alternative methods to prevent unwanted trackers by taking a proactive approach, allowing users to see a report about all the devices of concern around them&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sieve</title>
      <link>/project/sieve/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>/project/sieve/</guid>
      <description>&lt;p&gt;SIEVE is a versatile middleware that enhances access control in DBMS, enabling efficient query processing even with a large number of access control policies. We&amp;rsquo;re currently integrating caching to further improve query performance. Additionally, we&amp;rsquo;ve developed a workload generator that simulates various scenarios to test policy models and ensure access control compliance, reflecting real-world conditions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tattletale</title>
      <link>/project/tattletale/</link>
      <pubDate>Sat, 01 Jun 2024 00:00:00 +0000</pubDate>
      <guid>/project/tattletale/</guid>
      <description>&lt;p&gt;Tattletale uses denial constraints to discovery data inferences inside of a database relative to sensitive cells.  The cells that make up the denial constraints are then checked to see which cells infer information on them.  In the end all the cells that infer data on the sensitive cells and the cells that could be used to reconstruct those inferences are placed into a list which is used to generate a view that does not contain those cells.  Since inference can only be reconstructed as long as only one predicate is missing we can use that to minimize how many cells we have to hide.  The benefit of Tattletale is that it provides protection against inference which access control lists don&amp;rsquo;t provide.  The current challenge is trying to improve the run time performance and decrease the number of cells that have to be hidden while also guaranteeing a certain level of protection against reconstruction.Tattletale uses denial constraints to discovery data inferences inside of a database relative to sensitive cells.  The cells that make up the denial constraints are then checked to see which cells infer information on them.  In the end all the cells that infer data on the sensitive cells and the cells that could be used to reconstruct those inferences are placed into a list which is used to generate a view that does not contain those cells.  Since inference can only be reconstructed as long as only one predicate is missing we can use that to minimize how many cells we have to hide.  The benefit of Tattletale is that it provides protection against inference which access control lists don&amp;rsquo;t provide.  The current challenge is trying to improve the run time performance and decrease the number of cells that have to be hidden while also guaranteeing a certain level of protection against reconstruction.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
